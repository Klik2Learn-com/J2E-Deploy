{
  "_args": [
    [
      {
        "raw": "scope-analyzer@^2.0.1",
        "scope": null,
        "escapedName": "scope-analyzer",
        "name": "scope-analyzer",
        "rawSpec": "^2.0.1",
        "spec": ">=2.0.1 <3.0.0",
        "type": "range"
      },
      "/Applications/MAMP/htdocs/klik2learn/GITHUB/J2E-Application/J2E-Meteor/templates/node_modules/static-module"
    ]
  ],
  "_from": "scope-analyzer@^2.0.1",
  "_hasShrinkwrap": false,
  "_id": "scope-analyzer@2.1.1",
  "_location": "/scope-analyzer",
  "_nodeVersion": "13.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/scope-analyzer_2.1.1_1583489496882_0.473819497090739"
  },
  "_npmUser": {
    "name": "goto-bus-stop",
    "email": "renee@kooi.me"
  },
  "_npmVersion": "6.14.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "scope-analyzer@^2.0.1",
    "scope": null,
    "escapedName": "scope-analyzer",
    "name": "scope-analyzer",
    "rawSpec": "^2.0.1",
    "spec": ">=2.0.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/static-module"
  ],
  "_resolved": "https://registry.npmjs.org/scope-analyzer/-/scope-analyzer-2.1.1.tgz",
  "_shasum": "5156c27de084d74bf75af9e9506aaf95c6e73dd6",
  "_shrinkwrap": null,
  "_spec": "scope-analyzer@^2.0.1",
  "_where": "/Applications/MAMP/htdocs/klik2learn/GITHUB/J2E-Application/J2E-Meteor/templates/node_modules/static-module",
  "author": {
    "name": "RenÃ©e Kooi",
    "email": "renee@kooi.me"
  },
  "bugs": {
    "url": "https://github.com/goto-bus-stop/scope-analyzer/issues"
  },
  "dependencies": {
    "array-from": "^2.1.1",
    "dash-ast": "^1.0.0",
    "es6-map": "^0.1.5",
    "es6-set": "^0.1.5",
    "es6-symbol": "^3.1.1",
    "estree-is-function": "^1.0.0",
    "get-assigned-identifiers": "^1.1.0"
  },
  "description": "simple scope analysis for javascript ASTs",
  "devDependencies": {
    "acorn": "^6.2.0",
    "babel-core": "^6.26.3",
    "babel-plugin-transform-es2015-template-literals": "^6.22.0",
    "d3": "^4.13.0",
    "has-template-literals": "^1.0.0",
    "nanobench": "^2.1.1",
    "standard": "^14.3.1",
    "tape": "^4.11.0",
    "three": "^0.89.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-azEAihtQ9mEyZGhfgTJy3IbOWEzeOrYbg7NcYEshPKnKd+LZmC3TNd5dmDxbLBsTG/JVWmCp+vDJ03vJjeXMHg==",
    "shasum": "5156c27de084d74bf75af9e9506aaf95c6e73dd6",
    "tarball": "https://registry.npmjs.org/scope-analyzer/-/scope-analyzer-2.1.1.tgz",
    "fileCount": 12,
    "unpackedSize": 29182,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeYiHZCRA9TVsSAnZWagAAhMEQAJ4qbe0/bzYqaN1ib+0X\nA02dYdvUwPvr7CL2PVkaR1ua/iA+15KM2d8uhFqin4wbHamkhrs0oZJDn1CJ\nRTyq+jeucXhi1v5MANwiC1wG2flRfQFXdN3iBzrPIe26WgUIXmXDcEe16vuI\nFiReztdlIC4SWNISo1u5XqikhVK4Wxz+Ysj02jlDPni6gkYoSuJyfZLtep07\nORgx0T79ZHew5hdApORqf/kWJeQHJUjO7M7XMm0P/FdTG0wyVSo+MbWyRIKZ\ntCGTDDSIfVs6hofQA0pSe2HtIWwOENuWTM4kJgol/3iJhazj+SDkniaaAWh7\nxwrPOhS4VW3BY4bih6CKO4Uf+L5hWZJZGVJXcZ3qdNm8mXvBnmlVLKiIe9mk\nowV91kw0UBxGjyGArPM3tLoRK7X0VEqHWj+Tm68nThh2Gv/OLXBVNnM+7g/7\nWWB4OfegZHsQUJKTtkLcPCVgjNV5l8vgo1t2sNxq/GeCx8KaJNIbVxNR9R87\n/154zcatKLImQjsxgrmOZwxdvoCiMIBSWk4ETDqyiXElFn9jutlR9m2SMjTK\n5hb8sTqyfHpr4VVBEah2Hze/j+Jm8RRyv0i3faRp8bOhA6lCqxKrKE54mFaN\n/OSnM9CBvdb7VAI2FWD/2s9JasbMcOW4C/kPF/ox9oI6jGxHxgig30k6H5Vm\nnEdO\r\n=yjfc\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "aca7433a629c8be1c46dfc7962cdb16fd8d62ab9",
  "homepage": "https://github.com/goto-bus-stop/scope-analyzer",
  "keywords": [
    "analysis",
    "ast",
    "javascript",
    "nodes",
    "refactor",
    "rename",
    "scope"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "goto-bus-stop",
      "email": "rene@kooi.me"
    }
  ],
  "name": "scope-analyzer",
  "optionalDependencies": {},
  "readme": "# scope-analyzer\n\nsimple scope analysis for javascript ASTs. tracks scopes and collects references to variables.\n\nCaveats and/or todos:\n\n - May be missing edge cases.\n - Things like `label:`s are not considered at all, but ideally in the future they will!\n\n[![stability][stability-image]][stability-url]\n[![npm][npm-image]][npm-url]\n[![travis][travis-image]][travis-url]\n[![standard][standard-image]][standard-url]\n\n[stability-image]: https://img.shields.io/badge/stability-experimental-orange.svg?style=flat-square\n[stability-url]: https://nodejs.org/api/documentation.html#documentation_stability_index\n[npm-image]: https://img.shields.io/npm/v/scope-analyzer.svg?style=flat-square\n[npm-url]: https://www.npmjs.com/package/scope-analyzer\n[travis-image]: https://img.shields.io/travis/goto-bus-stop/scope-analyzer.svg?style=flat-square\n[travis-url]: https://travis-ci.org/goto-bus-stop/scope-analyzer\n[standard-image]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square\n[standard-url]: http://npm.im/standard\n\n## Install\n\n```\nnpm install scope-analyzer\n```\n\n## Usage\n\nNote: AST nodes passed to `scope-analyzer` functions are expected to reference the parent node on a `node.parent` property.\nNodes from [falafel](https://github.com/substack/node-falafel) or [transform-ast](https://github.com/goto-bus-stop/transform-ast) have a `.parent` property, but others may not. You can use [estree-assign-parent](https://github.com/goto-bus-stop/estree-assign-parent) to quickly assign a parent property to all nodes in an AST.\n\n```js\nvar scan = require('scope-analyzer')\n\nvar ast = parse('...')\n// Initialize node module variables\nscan.createScope(ast, ['module', 'exports', '__dirname', '__filename'])\nscan.crawl(ast)\n\nvar binding = scan.getBinding(ast, 'exports')\nbinding.getReferences().forEach(function (reference) {\n  // Assume for the sake of the example that all references to `exports` are assignments like\n  // `exports.xyz = abc`\n  console.log('found export:', reference.parent.property.name)\n})\n```\n\n## API\n\n### `crawl(ast)`\n\nWalk the ast and analyze all scopes. This will immediately allow you to use the `get*` methods on any node in the tree.\n\n### `clear(ast)`\n\nClear scope information in all nodes of the AST.\n\n### `visitScope(node)`\n\nVisit a node to check if it initialises any scopes.\nFor example, a function declaration will initialise a new scope to hold bindings for its parameters.\nUse this if you are already walking the AST manually, and if you don't need the scope information during this walk.\n\n### `visitBinding(node)`\n\nVisit a node to check if it is a reference to an existing binding.\nIf it is, the reference is added to the parent scope.\nUse this if you are already walking the AST manually.\n\n### `createScope(node, bindings)`\n\nInitialise a new scope at the given node. `bindings` is an array of variable names.\nThis can be useful to make the scope analyzer aware of preexisting global variables.\nIn that case, call `createScope` on the root node with the names of globals:\n\n```js\nvar ast = parse('xyz')\nscopeAnalyzer.createScope(ast, ['HTMLElement', 'Notification', ...])\n```\n\n### `deleteScope(node)`\n\nDelete the scope initialised by node.\n\n### `scope(node)`\n\nGet the [Scope](#scope) initialised by the given node.\n\n### `getBinding(node)`\n\nGet the [Binding](#binding) referenced by the `Identifier` `node`.\n\n### Scope\n\n#### `scope.has(name)`\n\nCheck if this scope defines `name`.\n\n#### `scope.getBinding(name)`\n\nGet the [Binding](#binding) named `name` that is declared by this scope.\n\n#### `scope.getReferences(name)`\n\nGet a list of all nodes referencing the `name` binding that is declared by this scope.\n\n#### `scope.getUndeclaredNames()`\n\nGet a list of all names that were used in this scope, but not defined anywhere in the AST.\n\n#### `scope.forEach(cb(binding, name))`\n\nLoop over all bindings declared by this scope.\n\n#### `scope.forEachAvailable(cb(binding, name))`\n\nLoop over all bindings available to this scope, declared in this scope or any parent scope.\n\n### Binding\n\n#### `binding.definition`\n\nThe node that defined this binding. If this binding was not declared in the AST, `binding.definition` will be undefined.\n\n#### `binding.getReferences()`\n\nReturn an array of nodes that reference this binding.\n\n#### `binding.isReferenced()`\n\nCheck if the binding is referenced, i.e., if there are any identifier Nodes (other than `binding.definition`) referencing this binding.\n\n#### `binding.remove(node)`\n\nRemove a reference to this binding. Use this when you are replacing the node referencing the binding with something else.\n\n## License\n\n[Apache-2.0](LICENSE.md)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/goto-bus-stop/scope-analyzer.git"
  },
  "scripts": {
    "bench": "nanobench bench/*.js",
    "test": "standard && tape -r ./test/_init.js test/index.js"
  },
  "version": "2.1.1"
}
